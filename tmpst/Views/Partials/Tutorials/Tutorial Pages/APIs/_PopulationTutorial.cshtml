<div class="text-center">
    <h2>Population Tutorial</h2>
    <hr />
</div>

<div class="row text-center">
    <div class="col-12 tutorial-para">
        <button onclick="downloadPDF('APIs/Population_API.pdf')" class="btn btn-secondary"><span>View as a PDF <i class="fas fa-file-pdf fa-2x"></i></span></button>
        <button id="usr-scrt-full-screen-btn" class="btn btn-success" onclick="tutFullScreen('population-tutorial')">Go Full Screen</button>
        <button style="display:none" id="usr-scrt-rmv-full-screen-btn" class="btn btn-danger" onclick="tutRemoveFullSCreen('population-tutorial')">Exit Full Screen</button>
    </div>
    <hr />
</div>

<!--FROM HERE-->

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The mortality section of the tmpst website is one of the more simpler of APIs to
            receive data from as there are no keys required to access the data from the website.
            The mortality API is provided by the World Population API provides information on a
            of data from the world such as:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li> World Population Rank </li>
            <li> Life Expectancy  </li>
            <li> Population </li>
            <li> Mortality Distribution </li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            These are divided by endpoints which are where the information will
            be accessed from. Each endpoint can return data in JSON, JSONP and HTML.
            For each endpoint you have a lot of customizability for querying the API such as:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li>Sex</li>
            <li>Country</li>
            <li>Date</li>
            <li>Date of Birth</li>
            <li>Years Ago</li>
            <li>Has Diabetes</li>
            <li>Today VS Tomorrow</li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <span><strong>Pre-Requisites</strong></span>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Understand the API (<a href="https://api.population.io">api.population.io</a>) by using the sandbox displayed on the website to make calls to their API
                </li>
                <li>
                    The endpoint that will be used will be the:
                    <ul>
                        <li>
                            <a href="https://api.population.io/1.0/countries">https://api.population.io/1.0/countries</a> for a list of countries
                        </li>
                        <li>
                            <a href="https://api.population.io/1.0/population/{year}/{country}/">https://api.population.io/1.0/population/{year}/{country}/</a>  for mortality
                        </li>
                    </ul>
                </li>
                <li>
                    A suitable method for making a request (Postman: <a href="https://www.getpostman.com/downloads/">https://www.getpostman.com/downloads/</a> or in new tab)
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Aims</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li> Learn how to request data from one of the World Population feeds in Postman </li>
                <li>Learn how to request data from one of the World Population feeds in a new tab</li>
                <li>Learn how to request data from one of the World Population feeds using AJAX call </li>
            </ul>
        </p>
    </div>
</div>



<div class="text-center">
    <h3>Postman Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to the World Population API feed
            using the postman application on Windows.
            Before proceeding with this tutorial, please ensure you have access
            to the Postman application or are using the online version.
            version.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps
            <ol>
                <li>Choose endpoint to request data from</li>
                <li>Construct request in Postman</li>
            </ol>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Choose endpoint to request data from</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            As mentioned earlier, World Population offers many population
            feed endpoints to choose from. In this tutorial, not all sources
            will be shown because the request format is identical for all.
            It is important to keep in mind that not all sources will have
            data at the time of the request. For example, making a request
            for the population of a country 2000 years in the future won’t
            yield any results from the request. With that in mind, the endpoint
            that will be used for this tutorial is New Zealand in the year 2019.
            This endpoint will always have data so it is good as an example.
            The endpoint is shown below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <a href="http://api.population.io/1.0/population/2019/New%20Zealand/">
                http://api.population.io/1.0/population/2019/New%20Zealand/
            </a>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 2: Construct request in Postman</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial assumes that you have a basic understanding of how to use Postman.
            If not, we provide a tutorial on how to utilise Postman properly that you may
            wish to read before you continue with this tutorial. If you know how to use
            Postman, create a new GET request and give it an appropriate name. The name
            I will use in this tutorial is “New Zealand Population in 2019 Request”.
            If you have setup the request properly you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <img src="~/images/Tutorials/APIs/Population/postman-request.png" />
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Nothing will happen if you attempt to send the request as the url box is empty.
            Now all that is required is to add the url
            mentioned in step 1 to the url box and hit send. You should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <img src="~/images/Tutorials/APIs/Population/postman-request.png" />
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Note: It is recommended that you add the format of the returned file.
            If you are going to use an AJAX call it is recommended to use JSONP format.
            Below are the formats the call is accepted in:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <a href="http://api.population.io/1.0/population/2019/New%20Zealand/?format=jsonp">
                http://api.population.io/1.0/population/2019/New%20Zealand/?format=jsonp
            </a>
            <a href="http://api.population.io/1.0/population/2019/New%20Zealand/?format=json">
                http://api.population.io/1.0/population/2019/New%20Zealand/?format=json
            </a>
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Part of the JSON response is shown below in plain text:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <pre>
            <code class="language-javascript">
[
  {
    "females": 28400,
    "country": "New Zealand",
    "age": 0,
    "males": 30000,
    "year": 2019,
    "total": 58400
  },
  {
    "females": 29000,
    "country": "New Zealand",
    "age": 1,
    "males": 30500,
    "year": 2019,
    "total": 59500
  },
                </code>
            </pre>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Not all the request will be show here as the response is too long for the document.
        </p>
    </div>
</div>












<div class="text-center">
    <h3>Browser Request Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to a News API feed using a new tab on a Google Chrome browser. For this tutorial, we will use the same endpoint as is used in the Postman example:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <a href="http://api.population.io/1.0/population/2019/New%20Zealand/?format=jsonp">
            http://api.population.io/1.0/population/2019/New%20Zealand/?format=jsonp
        </a>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps
            <ol>
                <li>Add url to tab and run</li>
            </ol>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Add url to tab and run</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial is easier than either the Postman method or the AJAX method (still to come)
            as it only involves using a tab in a browser as if you are navigating to a web page.
            To get a result, add the url to the address bar and hit enter and you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Population/browser-response.png" />
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The result is shown in plain text below:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <pre>
            <code class="language-javascript">
HTTP 200 OK
Content-Type: application/json
Vary: Accept
Allow: OPTIONS, GET
Cache-Control: public, max-age=86400

[
    {
        "females": 28400, 
        "country": "New Zealand", 
        "age": 0, 
        "males": 30000, 
        "year": 2019, 
        "total": 58400
    }, 
    {
        "females": 29000, 
        "country": "New Zealand", 
        "age": 1, 
        "males": 30500, 
        "year": 2019, 
        "total": 59500
    },
                </code>
            </pre>
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Once again, the full response is not shown as it is too large.
        </p>
    </div>
</div>





<div class="text-center">
    <h3>AJAX Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The above methods show you how to access the  World Population feed and
            view the data, however, neither method involves any coding
            and neither would work well in an application’s context.
            So, in this tutorial we will connect to the endpoint using
            AJAX which can then be put into the javascript of any application

        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps
            <ol>
                <li>Create a new playcode project</li>
                <li>Add the provided AJAX code and run</li>
            </ol>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Create a new playcode project</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            For this tutorial, playcode will be used to demonstrate the AJAX request.
            Although we are using playcode, almost any online JavaScript IDE would
            work (JsFiddle). If you search for playcode and
            click on the link you should see the following default project setup:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Population/ajax-request.png" />
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Playcode is ideal for this tutorial as we only need to
            change the js file and view the console as jquery is
            referenced as standard.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 2: Add the provided AJAX code and run</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The AJAX required to fetch the data programatically is:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <pre>
            <code class="language-javascript">
$.ajax({
        type: "GET",
        url: "https://api.population.io/1.0/population/2019/New%20Zealand/?format=jsonp",
        success: function (result) {
            console.log('AJAX Response: ', result);
        },
        error: function (errorResult) {
            console.log('ERROR: ', errorResult);
        }
    });
                </code>
            </pre>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            If you replace the contents of script.js 
            with the above AJAX and run the code, you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Population/ajax-response.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            As you can see this result looks similar to the other results we have seen earlier in the project, however, this code can be added to an application and the data can be fetched and altered dynamically.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Note: If playcode hangs or feels unresponsive when running this code there is no need to worry, their is a lot of data to process from this feed
        </p>
    </div>
</div>




<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Conclusion</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            That is the methods which can be used to request data from the World Population feeds.
            The most useful of the methods is
            AJAX, however, the others can be used for testing and ensuring the quality of the data.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Common Issues:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Normally, implementing the methods discussed in this tutorial are relatively easy, however, some of the most common issues are detailed below:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li>
                Lack of responsiveness - Depending on the feed chosen, the method used to
                fetch the data can seem slow because it has to process thousands of ages
                in the population sometimes. Normally, the request should complete quite
                quickly without too much impact on the user.
            </li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Outcomes</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            You should now be able to:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li>
                Request data from one of the World Population API feeds in Postman
            </li>
            <li>
                Request data from one of the World Population API feeds in a new tab
            </li>
            <li>
                Request data from one of the World Population API feeds using AJAX call
            </li>
        </ul>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>References</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Although we hope this tutorial has been all the help you need, here are some useful links that may be of use:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Useful Resources:</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li>
                World Population API - <a href="http://api.population.io/">http://api.population.io/</a>
            </li>
            <li>
                Functional playcode AJAX request - <a href="https://playcode.io/268741?tabs=console&script.js&output">https://playcode.io/268741?tabs=console&script.js&output</a>
            </li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Tools:</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <ul>
            <li>
                Postman - <a href="https://www.getpostman.com/downloads/">https://www.getpostman.com/downloads/</a>

            </li>
            <li>
                Playcode - <a href="https://playcode.io/">https://playcode.io/</a>
            </li>

        </ul>
    </div>
</div>