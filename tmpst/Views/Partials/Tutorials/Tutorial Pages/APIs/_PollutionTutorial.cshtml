<div class="text-center">
    <h2>Pollution Tutorial</h2>
    <hr />
</div>

<div class="row text-center">
    <div class="col-12 tutorial-para">
        <button onclick="downloadPDF('APIs/Pollution_API.pdf')" class="btn btn-secondary"><span>View as a PDF <i class="fas fa-file-pdf fa-2x"></i></span></button>
        <button id="pollution-tutorial-full-screen-btn" class="btn btn-success" onclick="tutFullScreen('pollution-tutorial')">Go Full Screen</button>
        <button style="display:none" id="pollution-tutorial-rmv-full-screen-btn" class="btn btn-danger" onclick="tutRemoveFullSCreen('pollution-tutorial')">Exit Full Screen</button>
    </div>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The pollution section of the tmpst website is one
            of the more simpler of APIs to receive data from as
            there are no keys required to access the data from
            the website. The pollution API is provided by OpenAQ
            which provides information on a variation of data
            from the world such as:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Cities
                </li>
                <li>
                    Countries
                </li>
                <li>
                    Pollution Tracking Locations
                </li>
                <li>
                    Pollution Measurements
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            These are divided by endpoints which are where
            the information will be accessed from. Each
            endpoint can return data in JSON. For each
            endpoint you have a lot of customizability for
            querying the API. Parameters for the measurements
            endpoint include:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Country
                </li>
                <li>
                    City
                </li>
                <li>
                    Location
                </li>
                <li>
                    Pollution Type
                </li>
                <li>
                    Coordinates
                </li>
                <li>
                    And more...
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Pre-requisits
            <ul>
                <li>
                    Read the API documentation (https://docs.openaq.org/#api-Measurements)
                </li>
                <li>
                    The endpoint that will be used will be the:
                </li>
                <ul>
                    <li>
                        https://api.openaq.org/v1/measurements for pollution measurements
                    </li>
                </ul>
                <li>
                    A suitable method for making a request (Postman: https://www.getpostman.com/downloads/ or in a new tab)
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Aims:
            <ul>
                <li>
                    Learn how to request data from one of the OpenAQ feeds in Postman
                </li>
                <li>
                    Learn how to request data from one of the OpenAQ feeds in a new tab
                </li>
                <li>
                    Learn how to request data from one of the OpenAQ feeds using AJAX call
                </li>
            </ul>
        </p>
    </div>
</div>


<div class="text-center">
    <h3> Postman Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to a OpenAQ
            API feed using the postman application on Windows.
            Before proceeding with this tutorial, please ensure
            you have access to the Postman application or are using
            the online version.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps:
            <ul>
                <li>
                    Choose endpoint to request data from
                </li>
                <li>
                    Construct request in Postman
                </li>
            </ul>
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Choose endpoint to request data from</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            As mentioned earlier, OpenAQ offers many pollution feed endpoints to
            choose from. In this tutorial, not all sources will be shown because
            the request format is identical for all. It is important to keep in
            mind that not all sources will have data at the time of the request.
            For example, making a request for the pollution of a country 2000 years
            in the future won’t yield any results from the request. With that in
            mind, the endpoint that will be used for this tutorial is /measurements.
            This endpoint will always have data so it is good as an example.
            The endpoint is shown below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            https://api.openaq.org/v1/measurements
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 2: Construct Request in Postman</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial assumes that you have a basic understanding of
            how to use Postman. If not, we provide a tutorial on how to
            utilise Postman properly that you may wish to read before you
            continue with this tutorial. If you know how to use Postman,
            create a new GET request and give it an appropriate name.
            The name I will use in this tutorial is “Pollution Measurements”.
            If you have setup the request properly you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Pullution/Postman_Step_2.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Nothing will happen if you attempt to send the request as the url box is empty.
            Now all that is required is to add the url mentioned in step 1 to the url box
            and hit send. You should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Pullution/Postman_Step_2b.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Part of the JSON response is shown below in plain text:

            {
            "meta": {
            "name": "openaq-api",
            "license": "CC BY 4.0",
            "website": "https://docs.openaq.org/",
            "page": 1,
            "limit": 100,
            "found": 387385311
            },
            "results": [
            {
            "location": "Escuela E-10",
            "parameter": "pm25",
            "date": {
            "utc": "2019-03-17T22:00:00.000Z",
            "local": "2019-03-17T19:00:00-03:00"
            },
            "value": 4.75,
            "unit": "µg/m³",
            "coordinates": {
            "latitude": -22.085518710314,
            "longitude": -70.188682515839
            },
            "country": "CL",
            "city": "Tocopilla"
            },
            {
            "location": "Escuela E-10",
            "parameter": "pm25",
            "date": {
            "utc": "2019-03-17T21:00:00.000Z",
            "local": "2019-03-17T18:00:00-03:00"
            },
            "value": 4.43,
            "unit": "µg/m³",
            "coordinates": {
            "latitude": -22.085518710314,
            "longitude": -70.188682515839
            },
            "country": "CL",
            "city": "Tocopilla"
            },
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Not all the request will be show here as the response is too long for the document.
        </p>
    </div>
</div>

<div class="text-center">
    <h3> Browser Request Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to a OpenAQ API
            pollution feed using a new tab on a Google Chrome browser.
            For this tutorial, we will use the same endpoint as is used
            in the Postman example:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            https://api.openaq.org/v1/measurements
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Add url to tab and run</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial is easier than either the Postman method or the AJAX method
            (still to come) as it only involves using a tab in a browser as if you
            are navigating to a web page. To get a result, add the url to the address
            bar and hit enter and you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Pullution/Browser_request_Step1a.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The result is shown in plain text below:

            {"meta":{"name":"openaq-api","license":"CC BY 4.0",
            "website":"https://docs.openaq.org/",
            "page":1,
            "limit":100,
            "found":387400908},
            "results":[{"location":"Escuela E-10",
            "parameter":"pm25",
            "date":{"utc":"2019-03-17T23:00:00.000Z",
            "local":"2019-03-17T20:00:00-03:00"},
            "value":4.76,"unit":"µg/m³",
            "coordinates":{"latitude":-22.085518710314,
            "longitude":-70.188682515839},
            "country":"CL",
            "city":"Tocopilla"},
            {"location":"Escuela E-10",
            "parameter":"pm25",
            "date":{"utc":"2019-03-17T22:00:00.000Z",
            "local":"2019-03-17T19:00:00-03:00"},
            "value":4.75,"unit":"µg/m³",
            "coordinates":{"latitude":-22.085518710314,
            "longitude":-70.188682515839},
            "country":"CL",
            "city":"Tocopilla"},
            {"location":"Escuela E-10",
            "parameter":"pm10",
            "date":{"utc":"2019-03-17T22:00:00.000Z",
            "local":"2019-03-17T19:00:00-03:00"},
            "value":27.72,
            "unit":"µg/m³",
            "coordinates":

            Once again, the full response is not shown as it is too large.
        </p>
    </div>
</div>

<div class="text-center">
    <h3> AJAX Tutorial</h3>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The above methods show you how to access the OpenAQ feed and view
            the data, however, neither method involves any coding and neither
            would work well in an application’s context. So, in this tutorial
            we will connect to the monthly feed using AJAX which can then be
            put into the javascript of any application
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps:
            <ul>
                <li>
                    Create a new playcode project
                </li>
                <li>
                    Add the provided AJAX code and run
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 1: Create a new playcode project</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            For this tutorial, playcode will be used to demonstrate the AJAX
            request. Although we are using playcode, almost any online
            JavaScript IDE would work (JsFiddle). If you search for playcode
            and click on the link you should see the following default project
            setup:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Pullution/Ajax_Step_1a.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Playcode is ideal for this tutorial as we only need to change
            the js file and view the console as jquery is referenced as
            standard.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Step 2: Add the provided AJAX code and run</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The AJAX required to fetch the data programatically is:

            $.ajax({
            type: "GET",
            url: "https://api.openaq.org/v1/measurements",
            contentType: "application/json",
            success: function (result) {
            //////console.log('AJAX Response: ', result);
            },
            error: function (errorResult) {
            //////console.log('ERROR: ', errorResult);
            }
            });

            If you replace the contents of script.js with the above AJAX and run the code,
            you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/Pullution/AJAX_Step2a.png" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            As you can see this result looks similar to the other
            results we have seen earlier in the project, however,
            this code can be added to an application and the data
            can be fetched and altered dynamically.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Note: If playcode hangs or feels unresponsive when
            running this code there is no need to worry, their
            is a lot of data to process from this feed.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Conclusion</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            That is the methods which can be used to request
            data from the OpenAQ feeds. The most useful of
            the methods is AJAX, however, the others can
            be used for testing and ensuring the quality
            of the data.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Common Issues:</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Normally, implementing the methods discussed in this
            tutorial are relatively easy, however, some of the
            most common issues are detailed below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Lack of responsiveness - Depending on the
                    feed chosen, the method used to fetch the
                    data can seem slow because it has to process
                    thousands of ages in the pollution sometimes.
                    Normally, the request should complete quite
                    quickly without too much impact on the user.
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Outcomes</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            You should now be able to:
            <ul>
                <li>
                    Request data from one of
                    the OpenAQ API pollution feeds in Postman
                </li>
                <li>
                    Request data from one of the OpenAQ API
                    pollution feeds in a new tab
                </li>
                <li>
                    Request data from one of the OpenAQ API
                    pollution feeds using AJAX call
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>References</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Although we hope this tutorial has been all
            the help you need, here are some useful links
            that may be of use:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Useful Resources:</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>

            <ul>
                <li>
                    OpenAQ API - https://openaq.org/
                </li>
                <li>
                    Functional playcode AJAX request -
                    https://playcode.io/268741?tabs=console&script.js&output
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <span><strong>Tools:</strong></span>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>

            <ul>
                <li>
                    Postman - https://www.getpostman.com/downloads/
                </li>
                <li>
                    Playcode - https://playcode.io/
                </li>
            </ul>
        </p>
    </div>
</div>
