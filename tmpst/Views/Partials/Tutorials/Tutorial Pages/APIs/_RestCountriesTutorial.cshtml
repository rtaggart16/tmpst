<div class="text-center">
    <h2>REST Countries Tutorial</h2>
    <hr />
</div>

<div class="row text-center">
    <div class="col-12 tutorial-para">
        <button onclick="downloadPDF('APIs/REST_Countries_API.pdf')" class="btn btn-secondary"><span>View as a PDF <i class="fas fa-file-pdf fa-2x"></i></span></button>
        <button id="usr-scrt-full-screen-btn" class="btn btn-success" onclick="tutFullScreen('rest-countries-tutorial')">Go Full Screen</button>
        <button style="display:none" id="usr-scrt-rmv-full-screen-btn" class="btn btn-danger" onclick="tutRemoveFullSCreen('rest-countries-tutorial')">Exit Full Screen</button>
    </div>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In the earthquake system, tmpst uses an API to fetch the details of a country depending on
            the country code. The API used to fetch this data is REST countries which is an API that
            offers open data without the use of keys or other forms of authorisation. REST countries
            provides information such as a country’s flag, languages and currencies among other data.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            An example response from the REST countries API website is displayed below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            [{
            "name": "Colombia",
            "topLevelDomain": [".co"],
            "alpha2Code": "CO",
            "alpha3Code": "COL",
            "callingCodes": ["57"],
            "capital": "Bogotá",
            "altSpellings": ["CO", "Republic of Colombia", "República de Colombia"],
            "region": "Americas",
            "subregion": "South America",
            "population": 48759958,
            "latlng": [4.0, -72.0],
            "demonym": "Colombian",
            "area": 1141748.0,
            "gini": 55.9,
            "timezones": ["UTC-05:00"],
            "borders": ["BRA", "ECU", "PAN", "PER", "VEN"],
            "nativeName": "Colombia",
            "numericCode": "170",
            "currencies": [{
            "code": "COP",
            "name": "Colombian peso",
            "symbol": "$"
            }],
            "languages": [{
            "iso639_1": "es",
            "iso639_2": "spa",
            "name": "Spanish",
            "nativeName": "Español"
            }],
            "translations": {
            "de": "Kolumbien",
            "es": "Colombia",
            "fr": "Colombie",
            "ja": "コロンビア",

            "it": "Colombia",
            "br": "Colômbia",
            "pt": "Colômbia"
            },
            "flag": "https://restcountries.eu/data/col.svg",
            "regionalBlocs": [{
            "acronym": "PA",
            "name": "Pacific Alliance",
            "otherAcronyms": [],
            "otherNames": ["Alianza del Pacífico"]
            }, {
            "acronym": "USAN",
            "name": "Union of South American Nations",
            "otherAcronyms": ["UNASUR", "UNASUL", "UZAN"],
            "otherNames": ["Unión de Naciones Suramericanas", "União de Nações
            Sul-Americanas", "Unie van Zuid-Amerikaanse Naties", "South American Union"]
            }],
            "cioc": "COL"
            }]
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Pre-requisites:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Understanding of JSON format
                </li>
                <li>
                    A valid country code to query the system
                </li>
                <li>
                    A suitable method for making a request (Postman:
                    (<a href="https://www.getpostman.com/downloads/">https://www.getpostman.com/downloads/</a>) or in new tab)
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Aims:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Learn how to request data from the REST Countries API in Postman
                </li>
                <li>
                    A valid country code to query the system
                </li>
                <li>
                    Learn how to request data from the REST Countries API using AJAX call
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="text-center">
    <h2>Postman Tutorial</h2>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to the REST Countries API using the postman
            application on Windows. Before proceeding with this tutorial, please ensure you have access
            to the Postman application or are using the online version.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps:

        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            1. Construct request in Postman
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Step 1: Construct request in Postman
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial assumes that you have a basic understanding of how to use Postman. If not, we
            provide a tutorial on how to utilise Postman properly that you may wish to read before you
            continue with this tutorial. If you know how to use Postman, create a new GET request and
            give it an appropriate name. The name I will use in this tutorial is “REST Countries Request”.
            If you have setup the request properly you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/RESTCountries/postman_request.PNG" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Nothing will happen if you attempt to send the request as the url box is empty. We need to
            add the base url (<a href="https://restcountries.eu/rest/v2/alpha/">(https://restcountries.eu/rest/v2/alpha/)</a>) or in new tab) appended with the chosen country
            code. For this example I will be using the United Kingdom (GB) which means that my final url
            looks like:
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            (<a href="https://restcountries.eu/rest/v2/alpha/GB">https://restcountries.eu/rest/v2/alpha/GB</a>)

        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            If you add this url to the url box and hit send you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/RESTCountries/postman_result.PNG" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The full response in plain text is shown below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            {
            "name": "United Kingdom of Great Britain and Northern Ireland",
            "topLevelDomain": [
            ".uk"
            ],
            "alpha2Code": "GB",
            "alpha3Code": "GBR",
            "callingCodes": [
            "44"
            ],
            "capital": "London",
            "altSpellings": [
            "GB",
            "UK",
            "Great Britain"
            ],
            "region": "Europe",
            "subregion": "Northern Europe",
            "population": 65110000,
            "latlng": [
            54,
            -2
            ],
            "demonym": "British",
            "area": 242900,
            "gini": 34,
            "timezones": [
            "UTC-08:00",
            "UTC-05:00",

            "UTC-04:00",
            "UTC-03:00",
            "UTC-02:00",
            "UTC",
            "UTC+01:00",
            "UTC+02:00",
            "UTC+06:00"
            ],
            "borders": [
            "IRL"
            ],
            "nativeName": "United Kingdom",
            "numericCode": "826",
            "currencies": [
            {
            "code": "GBP",
            "name": "British pound",
            "symbol": "£"
            }
            ],
            "languages": [
            {
            "iso639_1": "en",
            "iso639_2": "eng",
            "name": "English",
            "nativeName": "English"
            }
            ],
            "translations": {
            "de": "Vereinigtes Königreich",
            "es": "Reino Unido",
            "fr": "Royaume-Uni",
            "ja": "イギリス",
            "it": "Regno Unito",
            "br": "Reino Unido",
            "pt": "Reino Unido",
            "nl": "Verenigd Koninkrijk",
            "hr": "Ujedinjeno Kraljevstvo",
            "بریتانیای کبیر و ایرلند شمالی" :"fa"
            },
            "flag": "https://restcountries.eu/data/gbr.svg",
            "regionalBlocs": [
            {
            "acronym": "EU",
            "name": "European Union",
            "otherAcronyms": [],

            "otherNames": []
            }
            ],
            "cioc": "GBR"
            }
        </p>
    </div>
</div>

<div class="text-center">
    <h2>Browser Request Tutorial</h2>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            In this tutorial, we will create a request to the REST countries API using a new tab on a
            Google Chrome browser. For this tutorial, we will use the same endpoint as is used in the
            Postman example:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <a href="https://restcountries.eu/rest/v2/alpha/GB">https://restcountries.eu/rest/v2/alpha/GB</a>

        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Step 1: Add url to tab and run
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This tutorial is easier than either the Postman method or the AJAX method (still to come) as
            it only involves using a tab in a browser as if you are navigating to a web page. To get a
            result, add the url to the address bar and hit enter and you should see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/RESTCountries/URL_result.PNG" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The result is shown in plain text below:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            {
            "name": "United Kingdom of Great Britain and Northern Ireland",
            "topLevelDomain": [
            ".uk"
            ],
            "alpha2Code": "GB",
            "alpha3Code": "GBR",
            "callingCodes": [
            "44"
            ],
            "capital": "London",
            "altSpellings": [
            "GB",
            "UK",
            "Great Britain"
            ],
            "region": "Europe",
            "subregion": "Northern Europe",

            "population": 65110000,
            "latlng": [
            54,
            -2
            ],
            "demonym": "British",
            "area": 242900,
            "gini": 34,
            "timezones": [
            "UTC-08:00",
            "UTC-05:00",
            "UTC-04:00",
            "UTC-03:00",
            "UTC-02:00",
            "UTC",
            "UTC+01:00",
            "UTC+02:00",
            "UTC+06:00"
            ],
            "borders": [
            "IRL"
            ],
            "nativeName": "United Kingdom",
            "numericCode": "826",
            "currencies": [
            {
            "code": "GBP",
            "name": "British pound",
            "symbol": "£"
            }
            ],
            "languages": [
            {
            "iso639_1": "en",
            "iso639_2": "eng",
            "name": "English",
            "nativeName": "English"
            }
            ],
            "translations": {
            "de": "Vereinigtes Königreich",
            "es": "Reino Unido",
            "fr": "Royaume-Uni",
            "ja": "イギリス",
            "it": "Regno Unito",
            "br": "Reino Unido",

            "pt": "Reino Unido",
            "nl": "Verenigd Koninkrijk",
            "hr": "Ujedinjeno Kraljevstvo",
            "بریتانیای کبیر و ایرلند شمالی" :"fa"
            },
            "flag": "https://restcountries.eu/data/gbr.svg",
            "regionalBlocs": [
            {
            "acronym": "EU",
            "name": "European Union",
            "otherAcronyms": [],
            "otherNames": []
            }
            ],
            "cioc": "GBR"
            }
        </p>
    </div>
</div>

<div class="text-center">
    <h2>AJAX Tutorial</h2>
    <hr />
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The above methods show you how to access the REST Countries API and view the data,
            however, neither method involves any coding and neither would work well in an application’s
            context. So, in this tutorial we will connect to the monthly feed using AJAX which can then be
            put into the javascript of any application.
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Steps:
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            1. Create a new playcode project
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            2. Add the provided AJAX code and run
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Step 1: Create a new playcode project
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            For this tutorial, playcode will be used to demonstrate the AJAX request. Although we are
            using playcode, almost any online JavaScript IDE would work (JsFiddle). If you search for
            playcode and click on the link you should see the following default project setup:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/RESTCountries/Ajax_request.PNG" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Playcode is ideal for this tutorial as we only need to change the js file and view the console
            as jquery is referenced as standard
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Step 2: Add the provided AJAX code and run
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            The AJAX required to fetch the data programatically is:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            $.ajax({
            type: "GET",
            url: 'https://restcountries.eu/rest/v2/alpha/GB',
            dataType: "json",
            success: function (result) {
            console.log('Country Result: ', result);
            },
            error: function (errorResult) {
            console.log(errorResult);
            }
            });
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            If you replace the contents of script.js with the above AJAX and run the code, you should
            see the following:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <img src="~/images/Tutorials/APIs/RESTCountries/Ajax_result.PNG" />
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            As you can see this result looks similar to the other results we have seen earlier in the
            project, however, this code can be added to an application and the data can be fetched and
            altered dynamically.
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Conclusion
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            That is the methods which can be used to request data from the REST Countries API. The
            most useful of the methods is AJAX, however, the others can be used for testing and
            ensuring the quality of the data
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Common Issues:
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Normally, implementing the methods discussed in this tutorial are relatively easy, however,
            some of the most common issues are detailed below:
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Using invalid country code - The API endpoint requires a country code to fetch data
                    successfully and therefore using an incorrect country code will cause the API to crash
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Outcomes
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            You should now be able to:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Request data from the REST Countries API in Postman
                </li>
                <li>
                    Request data from the REST Countries API in a new tab
                </li>
                <li>
                    Request data from the REST Countries API using AJAX call
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                References
            </strong>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            Although we hope this tutorial has been all the help you need, here are some useful links
            that may be of use:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Useful Resources
            </strong>
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    REST Countries API - <a href="https://restcountries.eu/#api-endpoints-code">https://restcountries.eu/#api-endpoints-code</a>
                </li>
                <li>
                    Functional playcode AJAX request -
                    <a href="https://playcode.io/269259?tabs=console&script.js&output">https://playcode.io/269259?tabs=console&script.js&output</a>
                </li>
            </ul>
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <strong>
                Tools
            </strong>
        </p>
    </div>
</div>
<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Postman -  <a href="https://www.getpostman.com/downloads/">https://www.getpostman.com/downloads/</a>
                </li>
                <li>
                    Playcode - <a href="https://playcode.io/">https://playcode.io/</a>
                </li>
            </ul>
        </p>
    </div>
</div>


