<div class="text-center">
    <h2>Chart.js Tutorial</h2>
    <hr />
</div>

<div class="row text-center">
    <div class="col-12 tutorial-para">
        <button onclick="downloadPDF('Visualisations/Chart.JS.pdf')" class="btn btn-secondary"><span>View as a PDF <i class="fas fa-file-pdf fa-2x"></i></span></button>
        <button id="usr-scrt-full-screen-btn" class="btn btn-success" onclick="tutFullScreen('chartjs-tutorial')">Go Full Screen</button>
        <button style="display:none" id="usr-scrt-rmv-full-screen-btn" class="btn btn-danger" onclick="tutRemoveFullSCreen('chartjs-tutorial')">Exit Full Screen</button>
    </div>
</div>

<hr />div class="row">
<div class="col-12 tutorial-para">
    <p>
        Chart.JS is a javascript charting library with a number of available features and different chart types using
        the HTML5 Canvas element. Chart.JS provides a highly customisable chart that may seem confusing, but Chart.JS
        provides detailed documentation for all their chart types and the options available.
    </p>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            There are a number of reasons why a developer may choose to use Chart.js, we decided to use it in our first
            visualisation as it was a library that we had used before in other projects and it’s fairly easy to use. Chart.Js
            is an open source, a community project which means the library is free to use with little issue in terms of legalities.
            Chart.JS also provides 8 different chart types:
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            <ul>
                <li>
                    Line
                </li>
                <li>
                    Bar
                </li>
                <li>
                    Radar
                </li>
                <li>
                    Doughnut/Pie
                </li>
                <li>
                    Polar Area
                </li>
                <li>
                    Bubble
                </li>
                <li>
                    Scatter
                </li>
                <li>
                    Area
                </li>
            </ul>
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            This provided us with additional flexibility when visualising our data and Chart.JS is naturally responsive, which allows
            the charts to be redrawn as the window size is changed natively, this drastically cuts down on CSS rules and Javascript
            code that would allow us to do that otherwise.
        </p>
    </div>
</div>


<div class="row">
    <div class="col-12 tutorial-para">
        <p>
            During the development of TMPST, we considered a number of different chart tools, some of which we used elsewhere in the
            site, which you can read about in their tutorials. Chart.JS is the first visualisation tool we used, to analyse information
            about the current weather and the forecasted weather. In our website we used two different charts from ChartJS, a bar chart for
            the current weather as shown here;
        </p>
    </div>
</div>

<div class="row">
    <div class="col-12 tutorial-para">
       
    </div>
</div>