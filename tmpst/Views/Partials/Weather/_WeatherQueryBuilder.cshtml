@model tmpst.Models.UserSecretCollection
@*
    Author Info:

    Name(s) - Mark Riley, Ross Taggart
    Student Number - S1829984, S1828840
    Date Created - 18/02/2019
    Version - 1.0.1

    Description:
    Page that will container which builds query for user
*@


<div class="row">
    <div class="col-12">
        <div class="card weather-card-container">
            <div class="row weather-card-item">
                <div id="collapsed-text-container" class="col-11 text-center">
                    <h5 style="display:none" id="weather-wizard-collapsed-title">Weather Wizard</h5>
                </div>
                <div id="wizard-collapse-expand" class="col-1 text-right tmpst-clickable">
                    <i id="weather-wizard-arrow-up" class="fas fa-caret-up fa-2x"></i>
                    <i style="display:none" id="weather-wizard-arrow-down" class="fas fa-caret-down fa-2x"></i>
                </div>
            </div>
            <div id="weather-wizard-container">
                <div class="row weather-card-item">
                    <div class="col-12 text-center">
                        <h5>Weather Wizard</h5>
                    </div>
                </div>
                <div class="row weather-card-item">
                    <div class="col">
                        <select class="form-control" id="method-type-select">
                            <option value="current">Current Conditions</option>
                            <option value="forecast">Forecast</option>
                        </select>
                    </div>
                    <div class="col">
                        <select class="form-control" id="input-type-select">
                            <option value="plcName">Place Name</option>
                            <option value="latlng">Latitude and Longitude</option>
                            <option value="pstcode">Postcode</option>
                        </select>
                    </div>
                </div>

                <div id="input-container">
                    <div class="row weather-card-item">
                        <div class="col-12 text-center">
                            <h6>Input</h6>
                        </div>
                    </div>
                    <div style="display:none;" id="lat-long-input-container">
                        <div class="row weather-card-item">
                            <div class="col">
                                <input id="latitude-input" class="form-control" placeholder="Latitude" />
                            </div>
                            <div class="col">
                                <input id="longitude-input" class="form-control" placeholder="Longitude" />
                            </div>
                        </div>
                    </div>
                    <div id="name-and-postcode-input-container">
                        <div class="row weather-card-item">
                            <div class="col">
                                <input id="name-or-postcode-input" class="form-control" placeholder="Name or Postcode" />
                            </div>
                        </div>
                    </div>

                </div>

                <div id="submit-weather-request-container">
                    <div class="row">
                        <div class="col-12">
                            <button id="submit-weather-request-btn" onclick="submitWeatherRequest()" class="btn btn-success w-100">Submit</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script>
    
    let key = '@Model.Apixu.API_Key';

    let currentForecastData = {};
    
    //Allows the user to chose their input type, either latitude and longitutde of name of place
    $('#input-type-select').on('change', function () {
        console.log($('#input-type-select').val());

        let chosenType = $('#input-type-select').val();
        //if user selects input based on latitutde and longitude, fade out name field
        if (chosenType == 'latlng') {
            $('#name-and-postcode-input-container').fadeOut(300).promise().done(function () {
                $('#lat-long-input-container').fadeIn(300);
            });
        }
        //fade in name field if lat/long not selected
        else {
            $('#lat-long-input-container').fadeOut(300).promise().done(function () {
                $('#name-and-postcode-input-container').fadeIn(300);
            });
        }
    });
    //Slide animation for the weather search, which allows more information to be displayed on the page by increasing page real estate
    $('#wizard-collapse-expand').click(function () {
        $('#weather-wizard-container').slideToggle("slow", function () {
            //if container is visible, show an arrow that allows the container to be minimised
            if (!$('#weather-wizard-container').is(':visible')) {
                $('#weather-wizard-arrow-up').fadeOut().promise().done(function () {
                    $('#weather-wizard-arrow-down').fadeIn();
                    $('#weather-wizard-collapsed-title').fadeIn();
                });
            }
            else {
                $('#weather-wizard-arrow-down').fadeOut().promise().done(function () {
                    $('#weather-wizard-arrow-up').fadeIn();
                    $('#weather-wizard-collapsed-title').fadeOut();
                });
            }
        });
    });

    //allows the user to press enter to search
    let nameInput = document.getElementById("name-or-postcode-input");
    let longInput = document.getElementById("longitude-input")

    //once the input has been filled for the name/postcode, pressing enter will trigger a button click
    nameInput.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("submit-weather-request-btn").click();
        }
    });

    //once the input has been filled for the lat/long, pressing enter will trigger a button click
    longInput.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("submit-weather-request-btn").click();
        }
    });


    /* FUNCTION: submitWeatherRequest
     * PARAMS:
     * DESCRIPTION: Function to submit user input, either lat/long or name
    */

    function submitWeatherRequest() {
        
        let dataType = $('#method-type-select').val();
        let inputType = $('#input-type-select').val();
        let location = '';
        //if the selection type is lat/long, set the location values to the lat and long
        if (inputType == 'latlng') {
            location = $('#latitude-input').val() + ',' + $('#longitude-input').val();
        }
        else {
            //set the location value to name/postcode
            location = $('#name-or-postcode-input').val();
        }
        //contact the api with the location request
        resetWeatherPage();
        setTimeout(function () {
            contactAPI(dataType, location);
        }, 250);
        
    }

    /* FUNCTION: getCurrentWeather
     * PARAMS:
     *  - latitude: latitude of requested marker
     *  - longitude: longitude of requested marker
     *  - placeName: Name of the place that weather is being requested for
     * DESCRIPTION: Function which fetches the current weather data for the users location
    */

    function getCurrentWeather() {
        //sets the location variable to the users input
        let location = $('#location-input').val();
        contactAPI(location);
    }

    /* FUNCTION: contactAPI
     * PARAMS:
     *  - requestType: type of request user will make
     *  - location: location user inputs
     * DESCRIPTION: Function to initialise the API and request information about the users inputted location, such as their 7 day forecast or current weather statistics
    */
   
    function contactAPI(requestType, location) {

        // TODO: Clear dynamic fields
        //variable for api url
        let requestUrl = 'https://api.apixu.com/v1/' + requestType + '.json?key=' + key + '&q=' + location;
        //if user selects forecast, set the api to fetch data for next 7 days
        if (requestType == 'forecast') {
            requestUrl = requestUrl + '&days=7';
        }

        $.getJSON(requestUrl, function (data) {

            if (requestType == 'forecast') {
                let forecastDates = [];

                $.each(data.forecast.forecastday, function (key, val) {
                    let dateObject = new Date(val.date);
                    forecastDates.push(dateObject);
                });
                updateForecastTableHead(forecastDates);
                updateForecastTableBody(data.forecast.forecastday);

                $('#wizard-collapse-expand').click().promise().done(function () {
                    initMap(data.location.lat, data.location.lon, data.location.name, 'result-map');
                    console.log('REACHED FADE INS');
                    $('#weather-map-container').fadeIn(300).promise().done(function () {
                        console.log('MAP FADED IN');
                        $('#weather-forecast-data-container').fadeIn(300);
                        console.log('');
                        currentForecastData = data.forecast.forecastday;
                    });
                    
                });
            }
            else {
                updateCurrentWeatherDataContainers(data);
                $('#wizard-collapse-expand').click().promise().done(function () {
                    initMap(data.location.lat, data.location.lon, data.location.name, 'current-weather-result-map');
                    $('#weather-current-data-container').fadeIn(300);
                });
            }

            console.log('DATA: ', data);

            //initMap(data.location.lat, data.location.lon);

        });
    }

    /* FUNCTION: updateCurrentWeatherDataContainers
     * PARAMS:
     *  - data: data
     * DESCRIPTION: Function to append information about current weather to html elements on the page
    */

    function updateCurrentWeatherDataContainers(data) {
        $('#current-weather-icon-container').append('<img src="' + data.current.condition.icon + '" />');
        $('#current-weather-condition-container').append('<span><strong>Condition: </strong>' + data.current.condition.text + '</span>');
        $('#current-weather-temp-container').append('<span><strong>Temperature: </strong>' + data.current.temp_c + '&#8451</span>');
        $('#current-weather-feel-temp-container').append('<span><strong>Feels Like: </strong>' + data.current.feelslike_c + '&#8451</span>');
        $('#current-weather-wind-dir-container').append('<span><strong>Wind Direction: </strong>' + data.current.wind_dir + '</span>');
        $('#current-weather-wind-speed-container').append('<span><strong>Wind Speed(mph): </strong>' + data.current.wind_mph + '</span>');
    }

    /* FUNCTION: updateForecastTableHead
     * PARAMS:
     *  - dates: dates from current date
     * DESCRIPTION: Function to append information about the following 7 days from the date searched to a tableheader
    */

    function updateForecastTableHead(dates) {
        let days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
        let counter = 0
        let firstPass = true;
        let isComplete = false;

        $('#forecast-tbl-head').append('<tr id="temp-tbl-head-row"></tr>');

        $.each(dates, function (key, val) {
            let day = days[val.getDay()];
            $('#temp-tbl-head-row').append('<th>' + day + '</th>')
        });
        
    }

    /* FUNCTION: updateForecastTableBody
     * PARAMS:
     *  - apiData: information from the API
     * DESCRIPTION: Function to append information about the following 7 days forecast to elements on the page
    */

    function updateForecastTableBody(apiData) {
        let icons = [];
        let avgTemps = [];
        let maxTemps = [];
        let conditionTexts = [];

        $.each(apiData, function (key, val) {
            icons.push(val.day.condition.icon);
            avgTemps.push(val.day.avgtemp_c);
            maxTemps.push(val.day.maxtemp_c);
            conditionTexts.push(val.day.condition.text);
        });

        console.log('ICONS', icons);
        console.log('AVGTEMPS', avgTemps);
        console.log('MAXTEMPS', maxTemps);
        console.log('CONDITIONS', conditionTexts);

        //appends the forecast icons to the table
        $('#forecast-tbl-body').append('<tr><td><img src="' + icons[0] + '" /></td>' +
            '<td><img src="' + icons[1] + '" /></td>' +
            '<td><img src="' + icons[2] + '" /></td>' +
            '<td><img src="' + icons[3] + '" /></td>' +
            '<td><img src="' + icons[4] + '" /></td>' +
            '<td><img src="' + icons[5] + '" /></td>' +
            '<td><img src="' + icons[6] + '" /></td></tr>');

        //appends the conditions information to table
        $('#forecast-tbl-body').append('<tr><td>' + conditionTexts[0] + '</td>' +
            '<td>' + conditionTexts[1] + '</td>' +
            '<td>' + conditionTexts[2] + '</td>' +
            '<td>' + conditionTexts[3] + '</td>' +
            '<td>' + conditionTexts[4] + '</td>' +
            '<td>' + conditionTexts[5] + '</td>' +
            '<td>' + conditionTexts[6] + '</td></tr>');

        //appends the max temp to the table
        $('#forecast-tbl-body').append('<tr><td><strong>Max Temp</strong> - ' + maxTemps[0] + '</td>' +
            '<td><strong>Max Temp</strong> - ' + maxTemps[1] + '&#8451</td>' + 
            '<td><strong>Max Temp</strong> - ' + maxTemps[2] + '&#8451</td>' + 
            '<td><strong>Max Temp</strong> - ' + maxTemps[3] + '&#8451</td>' + 
            '<td><strong>Max Temp</strong> - ' + maxTemps[4] + '&#8451</td>' + 
            '<td><strong>Max Temp</strong> - ' + maxTemps[5] + '&#8451</td>' + 
            '<td><strong>Max Temp</strong> - ' + maxTemps[6] + '&#8451</td></tr>');

        //appends the average temp to the table
        $('#forecast-tbl-body').append('<tr><td><strong>Avg Temp</strong> - ' + avgTemps[0] + '</td>' +
            '<td><strong>Avg Temp</strong> - ' + avgTemps[1] + '&#8451</td>' + 
            '<td><strong>Avg Temp</strong> - ' + avgTemps[2] + '&#8451</td>' +
            '<td><strong>Avg Temp</strong> - ' + avgTemps[3] + '&#8451</td>' +
            '<td><strong>Avg Temp</strong> - ' + avgTemps[4] + '&#8451</td>' +
            '<td><strong>Avg Temp</strong> - ' + avgTemps[5] + '&#8451</td>' +
            '<td><strong>Avg Temp</strong> - ' + avgTemps[6] + '&#8451</td></tr>');
    }

</script>
